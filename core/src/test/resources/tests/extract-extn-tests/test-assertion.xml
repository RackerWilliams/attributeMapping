<?xml version="1.0" encoding="UTF-8"?>

<!-- XML Assertions -->

<!-- There should be a user group with foo attribute -->
<?assert /auth:extendedAttributes/auth:group[@name='user']/auth:attribute[@name='foo']?>

<!-- There should be two values for attribute foo -->
<?assert count(/auth:extendedAttributes/auth:group[@name='user']/auth:attribute[@name='foo']/auth:value) = 2?>

<!-- The values should match correctly -->
<?assert every $v in /auth:extendedAttributes/auth:group[@name='user']/auth:attribute[@name='foo']/auth:value satisfies $v=('2017-01-04T14:41:42.206-06:00',
         '2018-01-04T14:41:42.206-06:00')?>

<!-- There should be a user group with bar attribute -->
<?assert /auth:extendedAttributes/auth:group[@name='user']/auth:attribute[@name='bar']?>

<!-- There should be a single value for attribute bar -->
<?assert count(/auth:extendedAttributes/auth:group[@name='user']/auth:attribute[@name='bar']/auth:value) = 1?>

<!-- The value should match correctly -->
<?assert every $v in /auth:extendedAttributes/auth:group[@name='user']/auth:attribute[@name='bar']/auth:value satisfies $v=('bar')?>

<!-- There should only be two attributes in user -->
<?assert count(/auth:extendedAttributes/auth:group[@name='user']/auth:attribute) = 2?>


<!-- There should be a faws group with policy attribute -->
<?assert /auth:extendedAttributes/auth:group[@name='faws']/auth:attribute[@name='policy']?>

<!-- There should be 5 values for attribute policy -->
<?assert count(/auth:extendedAttributes/auth:group[@name='faws']/auth:attribute[@name='policy']/auth:value) = 5?>

<!-- The values should match correctly -->
<?assert every $v in /auth:extendedAttributes/auth:group[@name='faws']/auth:attribute[@name='policy']/auth:value satisfies $v=
         ('AWSPolicy','AWSPolicy2','AWSPolicy YEA!','AWSPolicy3','AWSPolicy YEA!!')?>


<!-- There should be a faws group with policy2 attribute -->
<?assert /auth:extendedAttributes/auth:group[@name='faws']/auth:attribute[@name='policy2']?>

<!-- There should be 5 values for attribute policy2 -->
<?assert count(/auth:extendedAttributes/auth:group[@name='faws']/auth:attribute[@name='policy2']/auth:value) = 5?>

<!-- The values should match correctly -->
<?assert every $v in /auth:extendedAttributes/auth:group[@name='faws']/auth:attribute[@name='policy2']/auth:value satisfies $v=
         ('AWSPolicy','AWSPolicy2','AWSPolicy YEA!','AWSPolicy3','AWSPolicy YEA!!')?>


<!-- JSON ASSERTIONS -->

<!-- There should be a user group with foo attribute -->
<?json-assert exists($_?("RAX-AUTH:extendedAttributes")?user?foo) ?>

<!-- There should be two values for attribute foo -->
<?json-assert count($_?("RAX-AUTH:extendedAttributes")?user?foo?*) = 2?>

<!-- The values should match correctly -->
<?json-assert every $val in $_?("RAX-AUTH:extendedAttributes")?user?foo?* satisfies $val=('2017-01-04T14:41:42.206-06:00',
'2018-01-04T14:41:42.206-06:00')?>

<!-- There should be a user group with bar attribute -->
<?json-assert exists($_?("RAX-AUTH:extendedAttributes")?user?bar) ?>

<!-- The value of bar should be bar -->
<?json-assert $_?("RAX-AUTH:extendedAttributes")?user?bar = 'bar'?>

<!-- There should only be 2 attributes in user -->
<?json-assert count($_?("RAX-AUTH:extendedAttributes")?user?*) = 2?>

<!-- There should be a user faws with policy attribute -->
<?json-assert exists($_?("RAX-AUTH:extendedAttributes")?faws?policy) ?>

<!-- There should be 5 values for attribute policy -->
<?json-assert count($_?("RAX-AUTH:extendedAttributes")?faws?policy?*) = 5?>

<!-- The values should match correctly -->
<?json-assert every $val in $_?("RAX-AUTH:extendedAttributes")?faws?policy?* satisfies $val=
     ('AWSPolicy','AWSPolicy2','AWSPolicy YEA!','AWSPolicy3','AWSPolicy YEA!!')?>

<!-- There should be a user faws with policy2 attribute -->
<?json-assert exists($_?("RAX-AUTH:extendedAttributes")?faws?policy2) ?>

<!-- There should be 5 values for attribute policy2 -->
<?json-assert count($_?("RAX-AUTH:extendedAttributes")?faws?policy2?*) = 5?>

<!-- The values should match correctly -->
<?json-assert every $val in $_?("RAX-AUTH:extendedAttributes")?faws?policy2?* satisfies $val=
     ('AWSPolicy','AWSPolicy2','AWSPolicy YEA!','AWSPolicy3','AWSPolicy YEA!!')?>



<saml2p:Response xmlns:saml2p="urn:oasis:names:tc:SAML:2.0:protocol"
                 xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 xmlns:auth="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
                 ID="_7fcd6173-e6e0-45a4-a2fd-74a4ef85bf30"
                 IssueInstant="2015-12-04T15:47:15.057Z"
                 Version="2.0">
    <saml2:Issuer xmlns:saml2="urn:oasis:names:tc:SAML:2.0:assertion">http://test.rackspace.com</saml2:Issuer>
    <saml2p:Status>
        <saml2p:StatusCode Value="urn:oasis:names:tc:SAML:2.0:status:Success"/>
    </saml2p:Status>
    <saml2:Assertion xmlns="http://docs.rackspace.com/identity/api/ext/MappingRules"
                    xmlns:saml2="urn:oasis:names:tc:SAML:2.0:assertion"
                    xmlns:mapping="http://docs.rackspace.com/identity/api/ext/MappingRules"
                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    IssueInstant="2013-11-15T16:19:06.310Z"
                    Version="2.0"
                    ID="_406fb7fe-a519-4919-a42c-f67794a670a5__RAX__">
      <saml2:Issuer>http://my.rackspace.com</saml2:Issuer>
      <saml2:Subject>
         <saml2:NameID Format="urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified">john.doe</saml2:NameID>
         <saml2:SubjectConfirmation Method="urn:oasis:names:tc:SAML:2.0:cm:bearer">
            <saml2:SubjectConfirmationData NotOnOrAfter="2013-11-17T16:19:06.298Z"/>
         </saml2:SubjectConfirmation>
      </saml2:Subject>
      <saml2:AuthnStatement AuthnInstant="2013-11-15T16:19:04.055Z">
        <saml2:AuthnContext>
            <saml2:AuthnContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport
            </saml2:AuthnContextClassRef>
        </saml2:AuthnContext>
      </saml2:AuthnStatement>
      <saml2:AttributeStatement>
         <saml2:Attribute Name="email">
            <saml2:AttributeValue xsi:type="xs:string">no-reply@rackspace.com</saml2:AttributeValue>
         </saml2:Attribute>
         <saml2:Attribute Name="domain">
            <saml2:AttributeValue xsi:type="xs:string">323676</saml2:AttributeValue>
         </saml2:Attribute>
         <saml2:Attribute Name="roles">
            <saml2:AttributeValue xsi:type="xs:string">nova:admin</saml2:AttributeValue>
         </saml2:Attribute>
         <saml2:Attribute Name="user/foo">
            <saml2:AttributeValue xsi:type="xs:dateTime">2017-01-04T14:41:42.206-06:00</saml2:AttributeValue>
         </saml2:Attribute>
         <saml2:Attribute Name="user/foo">
              <saml2:AttributeValue xsi:type="xs:dateTime">2018-01-04T14:41:42.206-06:00</saml2:AttributeValue>
          </saml2:Attribute>
          <saml2:Attribute Name="user/bar">
              <saml2:AttributeValue>bar</saml2:AttributeValue>
          </saml2:Attribute>
         <saml2:Attribute Name="faws/policy">
            <saml2:AttributeValue xsi:type="xs:string">AWSPolicy</saml2:AttributeValue>
            <saml2:AttributeValue xsi:type="xs:string">AWSPolicy2</saml2:AttributeValue>
            <saml2:AttributeValue xsi:type="xs:string">AWSPolicy YEA!</saml2:AttributeValue>
            <saml2:AttributeValue xsi:type="xs:string">AWSPolicy3</saml2:AttributeValue>
            <saml2:AttributeValue xsi:type="xs:string">AWSPolicy YEA!!</saml2:AttributeValue>
         </saml2:Attribute>
          <saml2:Attribute Name="faws/policy2">
              <saml2:AttributeValue xsi:type="xs:string">AWSPolicy</saml2:AttributeValue>
              <saml2:AttributeValue xsi:type="xs:string">AWSPolicy2</saml2:AttributeValue>
              <saml2:AttributeValue xsi:type="xs:string">AWSPolicy YEA!</saml2:AttributeValue>
              <saml2:AttributeValue xsi:type="xs:string">AWSPolicy3</saml2:AttributeValue>
              <saml2:AttributeValue xsi:type="xs:string">AWSPolicy YEA!!</saml2:AttributeValue>
          </saml2:Attribute>
      </saml2:AttributeStatement>
   </saml2:Assertion>
   <saml2:Assertion xmlns:saml2="urn:oasis:names:tc:SAML:2.0:assertion"
                    ID="_406fb7fe-a519-4919-a42c-f67794a670a5"
                    IssueInstant="2013-11-15T16:19:06.310Z"
                    Version="2.0">
      <saml2:Issuer>http://my.rackspace.com</saml2:Issuer>
      <saml2:Subject>
        <saml2:NameID Format="urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified">john.doe</saml2:NameID>
        <saml2:SubjectConfirmation Method="urn:oasis:names:tc:SAML:2.0:cm:bearer">
            <saml2:SubjectConfirmationData NotOnOrAfter="2013-11-17T16:19:06.298Z"/>
        </saml2:SubjectConfirmation>
      </saml2:Subject>
      <saml2:AuthnStatement AuthnInstant="2013-11-15T16:19:04.055Z">
        <saml2:AuthnContext>
            <saml2:AuthnContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport
            </saml2:AuthnContextClassRef>
        </saml2:AuthnContext>
      </saml2:AuthnStatement>
      <saml2:AttributeStatement>
        <saml2:Attribute Name="roles">
            <saml2:AttributeValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xs:string">nova:admin</saml2:AttributeValue>
        </saml2:Attribute>
        <saml2:Attribute Name="domain">
            <saml2:AttributeValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xs:string">323676</saml2:AttributeValue>
        </saml2:Attribute>
        <saml2:Attribute Name="email">
            <saml2:AttributeValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xs:string">no-reply@rackspace.com</saml2:AttributeValue>
        </saml2:Attribute>
        <saml2:Attribute Name="bar">
            <saml2:AttributeValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xs:string">BAR!</saml2:AttributeValue>
        </saml2:Attribute>
        <saml2:Attribute Name="FirstName">
            <saml2:AttributeValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xs:string">John</saml2:AttributeValue>
        </saml2:Attribute>
        <saml2:Attribute Name="LastName">
            <saml2:AttributeValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xs:string">Doe</saml2:AttributeValue>
        </saml2:Attribute>
      </saml2:AttributeStatement>
   </saml2:Assertion>
</saml2p:Response>
